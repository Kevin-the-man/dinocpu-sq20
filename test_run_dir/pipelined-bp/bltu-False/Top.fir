;buildInfoPackage: chisel3, version: 3.2.4, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Top : 
  module PipelinedCPUBP : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>, ready : UInt<1>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    
  module DualPortedCombinMemory : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _T : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 36:35]
    _T.bits.data <= UInt<32>("h00") @[base-memory-components.scala 36:35]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _T.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _T.valid @[base-memory-components.scala 36:20]
    wire _T_1 : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 37:35]
    _T_1.bits.data <= UInt<32>("h00") @[base-memory-components.scala 37:35]
    _T_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _T_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _T_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.imem.request.valid : @[memory.scala 25:32]
      node _T_2 = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 30:30]
      node _T_3 = asUInt(reset) @[memory.scala 30:11]
      node _T_4 = or(_T_2, _T_3) @[memory.scala 30:11]
      node _T_5 = eq(_T_4, UInt<1>("h00")) @[memory.scala 30:11]
      when _T_5 : @[memory.scala 30:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:30 assert(request.operation === Read)\n") @[memory.scala 30:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 30:11]
        skip @[memory.scala 30:11]
      node _T_6 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 35:27]
      when _T_6 : @[memory.scala 35:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 36:30]
        node _T_7 = shr(io.imem.request.bits.address, 2) @[memory.scala 37:60]
        node _T_8 = bits(_T_7, 13, 0) @[memory.scala 37:43]
        infer mport _T_9 = memory[_T_8], clock @[memory.scala 37:43]
        io.imem.response.bits.data <= _T_9 @[memory.scala 37:34]
        skip @[memory.scala 35:37]
      else : @[memory.scala 38:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 39:30]
        skip @[memory.scala 38:18]
      skip @[memory.scala 25:32]
    else : @[memory.scala 41:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:28]
      skip @[memory.scala 41:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.dmem.request.valid : @[memory.scala 52:32]
      node _T_10 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 56:31]
      node _T_11 = asUInt(reset) @[memory.scala 56:12]
      node _T_12 = or(_T_10, _T_11) @[memory.scala 56:12]
      node _T_13 = eq(_T_12, UInt<1>("h00")) @[memory.scala 56:12]
      when _T_13 : @[memory.scala 56:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:56 assert (request.operation =/= Write)\n") @[memory.scala 56:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 56:12]
        skip @[memory.scala 56:12]
      node _T_14 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 58:29]
      node _T_15 = asUInt(reset) @[memory.scala 58:12]
      node _T_16 = or(_T_14, _T_15) @[memory.scala 58:12]
      node _T_17 = eq(_T_16, UInt<1>("h00")) @[memory.scala 58:12]
      when _T_17 : @[memory.scala 58:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:58 assert (request.address < size.U)\n") @[memory.scala 58:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 58:12]
        skip @[memory.scala 58:12]
      node _T_18 = shr(io.dmem.request.bits.address, 2) @[memory.scala 61:58]
      node _T_19 = bits(_T_18, 13, 0) @[memory.scala 61:46]
      read mport _T_20 = memory[_T_19], clock @[memory.scala 61:46]
      io.dmem.response.bits.data <= _T_20 @[memory.scala 61:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 62:28]
      node _T_21 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 65:29]
      when _T_21 : @[memory.scala 65:44]
        node _T_22 = shr(io.dmem.request.bits.address, 2) @[memory.scala 66:25]
        node _T_23 = bits(_T_22, 13, 0) @[memory.scala 66:13]
        infer mport _T_24 = memory[_T_23], clock @[memory.scala 66:13]
        _T_24 <= io.dmem.request.bits.writedata @[memory.scala 66:31]
        skip @[memory.scala 65:44]
      skip @[memory.scala 52:32]
    else : @[memory.scala 68:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 69:28]
      skip @[memory.scala 68:16]
    
  module ICombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>, ready : UInt<1>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _T : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>, ready : UInt<1>} @[base-memory-components.scala 52:31]
    _T.ready <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.instruction <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.address <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.ready <= _T.ready @[base-memory-components.scala 52:15]
    io.pipeline.instruction <= _T.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 52:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _T_1 : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _T_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _T_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _T_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _T_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _T_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _T_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.ready <= UInt<1>("h01") @[memory-combin-ports.scala 29:21]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 32:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 33:27]
    
  module DCombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _T : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>} @[base-memory-components.scala 69:31]
    _T.readdata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _T.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _T.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.writedata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.address <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _T.readdata @[base-memory-components.scala 69:15]
    _T.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _T.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _T.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _T.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _T.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 69:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 42:20]
    node _T_1 = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 44:51]
    node _T_2 = and(io.pipeline.valid, _T_1) @[memory-combin-ports.scala 44:27]
    when _T_2 : @[memory-combin-ports.scala 44:77]
      node _T_3 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 46:34]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[memory-combin-ports.scala 46:12]
      node _T_5 = asUInt(reset) @[memory-combin-ports.scala 46:11]
      node _T_6 = or(_T_4, _T_5) @[memory-combin-ports.scala 46:11]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[memory-combin-ports.scala 46:11]
      when _T_7 : @[memory-combin-ports.scala 46:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:46 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 46:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 46:11]
        skip @[memory-combin-ports.scala 46:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 48:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 49:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 51:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 51:33]
      else : @[memory-combin-ports.scala 61:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 63:37]
        skip @[memory-combin-ports.scala 61:18]
      skip @[memory-combin-ports.scala 44:77]
    else : @[memory-combin-ports.scala 65:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 67:26]
      skip @[memory-combin-ports.scala 65:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 71:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 72:33]
        wire _T_8 : UInt<32> @[memory-combin-ports.scala 74:28]
        node _T_9 = neq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 77:34]
        when _T_9 : @[memory-combin-ports.scala 77:43]
          node _T_10 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 79:42]
          wire _T_11 : UInt<32> @[memory-combin-ports.scala 80:29]
          _T_11 <= io.bus.response.bits.data @[memory-combin-ports.scala 82:18]
          node _T_12 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 85:36]
          when _T_12 : @[memory-combin-ports.scala 85:45]
            node _T_13 = eq(_T_10, UInt<1>("h00")) @[memory-combin-ports.scala 86:23]
            when _T_13 : @[memory-combin-ports.scala 86:32]
              node _T_14 = bits(_T_11, 31, 8) @[memory-combin-ports.scala 87:38]
              node _T_15 = bits(io.pipeline.writedata, 7, 0) @[memory-combin-ports.scala 87:67]
              node _T_16 = cat(_T_14, _T_15) @[Cat.scala 29:58]
              _T_8 <= _T_16 @[memory-combin-ports.scala 87:23]
              skip @[memory-combin-ports.scala 86:32]
            else : @[memory-combin-ports.scala 88:38]
              node _T_17 = eq(_T_10, UInt<1>("h01")) @[memory-combin-ports.scala 88:29]
              when _T_17 : @[memory-combin-ports.scala 88:38]
                node _T_18 = bits(_T_11, 31, 16) @[memory-combin-ports.scala 89:38]
                node _T_19 = bits(io.pipeline.writedata, 15, 8) @[memory-combin-ports.scala 89:72]
                node _T_20 = bits(_T_11, 7, 0) @[memory-combin-ports.scala 89:88]
                node _T_21 = cat(_T_19, _T_20) @[Cat.scala 29:58]
                node _T_22 = cat(_T_18, _T_21) @[Cat.scala 29:58]
                _T_8 <= _T_22 @[memory-combin-ports.scala 89:23]
                skip @[memory-combin-ports.scala 88:38]
              else : @[memory-combin-ports.scala 90:38]
                node _T_23 = eq(_T_10, UInt<2>("h02")) @[memory-combin-ports.scala 90:29]
                when _T_23 : @[memory-combin-ports.scala 90:38]
                  node _T_24 = bits(_T_11, 31, 24) @[memory-combin-ports.scala 91:38]
                  node _T_25 = bits(io.pipeline.writedata, 23, 16) @[memory-combin-ports.scala 91:72]
                  node _T_26 = bits(_T_11, 15, 0) @[memory-combin-ports.scala 91:88]
                  node _T_27 = cat(_T_25, _T_26) @[Cat.scala 29:58]
                  node _T_28 = cat(_T_24, _T_27) @[Cat.scala 29:58]
                  _T_8 <= _T_28 @[memory-combin-ports.scala 91:23]
                  skip @[memory-combin-ports.scala 90:38]
                else : @[memory-combin-ports.scala 92:23]
                  node _T_29 = bits(io.pipeline.writedata, 31, 24) @[memory-combin-ports.scala 93:51]
                  node _T_30 = bits(_T_11, 23, 0) @[memory-combin-ports.scala 93:68]
                  node _T_31 = cat(_T_29, _T_30) @[Cat.scala 29:58]
                  _T_8 <= _T_31 @[memory-combin-ports.scala 93:23]
                  skip @[memory-combin-ports.scala 92:23]
            skip @[memory-combin-ports.scala 85:45]
          else : @[memory-combin-ports.scala 95:22]
            node _T_32 = eq(_T_10, UInt<1>("h00")) @[memory-combin-ports.scala 96:24]
            when _T_32 : @[memory-combin-ports.scala 96:33]
              node _T_33 = bits(_T_11, 31, 16) @[memory-combin-ports.scala 97:38]
              node _T_34 = bits(io.pipeline.writedata, 15, 0) @[memory-combin-ports.scala 97:67]
              node _T_35 = cat(_T_33, _T_34) @[Cat.scala 29:58]
              _T_8 <= _T_35 @[memory-combin-ports.scala 97:23]
              skip @[memory-combin-ports.scala 96:33]
            else : @[memory-combin-ports.scala 98:23]
              node _T_36 = bits(io.pipeline.writedata, 31, 16) @[memory-combin-ports.scala 99:51]
              node _T_37 = bits(_T_11, 15, 0) @[memory-combin-ports.scala 99:68]
              node _T_38 = cat(_T_36, _T_37) @[Cat.scala 29:58]
              _T_8 <= _T_38 @[memory-combin-ports.scala 99:23]
              skip @[memory-combin-ports.scala 98:23]
            skip @[memory-combin-ports.scala 95:22]
          skip @[memory-combin-ports.scala 77:43]
        else : @[memory-combin-ports.scala 102:20]
          _T_8 <= io.pipeline.writedata @[memory-combin-ports.scala 104:19]
          skip @[memory-combin-ports.scala 102:20]
        io.bus.request.bits.writedata <= _T_8 @[memory-combin-ports.scala 107:37]
        skip @[memory-combin-ports.scala 72:33]
      else : @[memory-combin-ports.scala 108:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 108:39]
          wire _T_39 : UInt<32> @[memory-combin-ports.scala 110:36]
          wire _T_40 : UInt<32> @[memory-combin-ports.scala 111:36]
          node _T_41 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 113:39]
          node _T_42 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 114:34]
          when _T_42 : @[memory-combin-ports.scala 114:43]
            node _T_43 = mul(_T_41, UInt<4>("h08")) @[memory-combin-ports.scala 116:64]
            node _T_44 = dshr(io.bus.response.bits.data, _T_43) @[memory-combin-ports.scala 116:53]
            node _T_45 = and(_T_44, UInt<8>("h0ff")) @[memory-combin-ports.scala 116:72]
            _T_39 <= _T_45 @[memory-combin-ports.scala 116:23]
            skip @[memory-combin-ports.scala 114:43]
          else : @[memory-combin-ports.scala 117:50]
            node _T_46 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 117:41]
            when _T_46 : @[memory-combin-ports.scala 117:50]
              node _T_47 = mul(_T_41, UInt<4>("h08")) @[memory-combin-ports.scala 119:64]
              node _T_48 = dshr(io.bus.response.bits.data, _T_47) @[memory-combin-ports.scala 119:53]
              node _T_49 = and(_T_48, UInt<16>("h0ffff")) @[memory-combin-ports.scala 119:72]
              _T_39 <= _T_49 @[memory-combin-ports.scala 119:23]
              skip @[memory-combin-ports.scala 117:50]
            else : @[memory-combin-ports.scala 120:20]
              _T_39 <= io.bus.response.bits.data @[memory-combin-ports.scala 121:23]
              skip @[memory-combin-ports.scala 120:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 124:31]
            node _T_50 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 125:36]
            when _T_50 : @[memory-combin-ports.scala 125:45]
              node _T_51 = bits(_T_39, 7, 7) @[memory-combin-ports.scala 127:59]
              node _T_52 = bits(_T_51, 0, 0) @[Bitwise.scala 71:15]
              node _T_53 = mux(_T_52, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 71:12]
              node _T_54 = bits(_T_39, 7, 0) @[memory-combin-ports.scala 127:79]
              node _T_55 = cat(_T_53, _T_54) @[Cat.scala 29:58]
              _T_40 <= _T_55 @[memory-combin-ports.scala 127:30]
              skip @[memory-combin-ports.scala 125:45]
            else : @[memory-combin-ports.scala 128:52]
              node _T_56 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 128:43]
              when _T_56 : @[memory-combin-ports.scala 128:52]
                node _T_57 = bits(_T_39, 15, 15) @[memory-combin-ports.scala 130:59]
                node _T_58 = bits(_T_57, 0, 0) @[Bitwise.scala 71:15]
                node _T_59 = mux(_T_58, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 71:12]
                node _T_60 = bits(_T_39, 15, 0) @[memory-combin-ports.scala 130:79]
                node _T_61 = cat(_T_59, _T_60) @[Cat.scala 29:58]
                _T_40 <= _T_61 @[memory-combin-ports.scala 130:30]
                skip @[memory-combin-ports.scala 128:52]
              else : @[memory-combin-ports.scala 131:22]
                _T_40 <= _T_39 @[memory-combin-ports.scala 133:30]
                skip @[memory-combin-ports.scala 131:22]
            skip @[memory-combin-ports.scala 124:31]
          else : @[memory-combin-ports.scala 135:20]
            _T_40 <= _T_39 @[memory-combin-ports.scala 136:28]
            skip @[memory-combin-ports.scala 135:20]
          io.pipeline.readdata <= _T_40 @[memory-combin-ports.scala 139:28]
          skip @[memory-combin-ports.scala 108:39]
      skip @[memory-combin-ports.scala 71:32]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {success : UInt<1>}
    
    io.success is invalid @[top.scala 12:14]
    inst cpu of PipelinedCPUBP @[top.scala 14:20]
    cpu.clock <= clock
    cpu.reset <= reset
    inst mem of DualPortedCombinMemory @[top.scala 15:20]
    mem.clock <= clock
    mem.reset <= reset
    inst imem of ICombinMemPort @[top.scala 17:20]
    imem.clock <= clock
    imem.reset <= reset
    inst dmem of DCombinMemPort @[top.scala 18:20]
    dmem.clock <= clock
    dmem.reset <= reset
    mem.io.imem.request.bits.operation <= imem.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.writedata <= imem.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.address <= imem.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    mem.io.imem.request.valid <= imem.io.bus.request.valid @[base-memory-components.scala 16:26]
    imem.io.bus.request.ready <= mem.io.imem.request.ready @[base-memory-components.scala 16:26]
    imem.io.bus.response.bits.data <= mem.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    imem.io.bus.response.valid <= mem.io.imem.response.valid @[base-memory-components.scala 17:26]
    mem.io.dmem.request.bits.operation <= dmem.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.writedata <= dmem.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.address <= dmem.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    mem.io.dmem.request.valid <= dmem.io.bus.request.valid @[base-memory-components.scala 19:26]
    dmem.io.bus.request.ready <= mem.io.dmem.request.ready @[base-memory-components.scala 19:26]
    dmem.io.bus.response.bits.data <= mem.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    dmem.io.bus.response.valid <= mem.io.dmem.response.valid @[base-memory-components.scala 20:26]
    cpu.io.imem.ready <= imem.io.pipeline.ready @[top.scala 23:15]
    cpu.io.imem.instruction <= imem.io.pipeline.instruction @[top.scala 23:15]
    cpu.io.imem.good <= imem.io.pipeline.good @[top.scala 23:15]
    imem.io.pipeline.valid <= cpu.io.imem.valid @[top.scala 23:15]
    imem.io.pipeline.address <= cpu.io.imem.address @[top.scala 23:15]
    cpu.io.dmem.readdata <= dmem.io.pipeline.readdata @[top.scala 24:15]
    dmem.io.pipeline.sext <= cpu.io.dmem.sext @[top.scala 24:15]
    dmem.io.pipeline.maskmode <= cpu.io.dmem.maskmode @[top.scala 24:15]
    dmem.io.pipeline.memwrite <= cpu.io.dmem.memwrite @[top.scala 24:15]
    dmem.io.pipeline.memread <= cpu.io.dmem.memread @[top.scala 24:15]
    dmem.io.pipeline.writedata <= cpu.io.dmem.writedata @[top.scala 24:15]
    cpu.io.dmem.good <= dmem.io.pipeline.good @[top.scala 24:15]
    dmem.io.pipeline.valid <= cpu.io.dmem.valid @[top.scala 24:15]
    dmem.io.pipeline.address <= cpu.io.dmem.address @[top.scala 24:15]
    
