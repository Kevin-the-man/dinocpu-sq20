;buildInfoPackage: chisel3, version: 3.2.4, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit ALU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip operation : UInt<4>, flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = eq(io.operation, UInt<1>("h00")) @[alu.scala 25:22]
    when _T : @[alu.scala 25:37]
      node _T_1 = and(io.inputx, io.inputy) @[alu.scala 26:28]
      io.result <= _T_1 @[alu.scala 26:15]
      skip @[alu.scala 25:37]
    else : @[alu.scala 28:42]
      node _T_2 = eq(io.operation, UInt<1>("h01")) @[alu.scala 28:27]
      when _T_2 : @[alu.scala 28:42]
        node _T_3 = or(io.inputx, io.inputy) @[alu.scala 29:28]
        io.result <= _T_3 @[alu.scala 29:15]
        skip @[alu.scala 28:42]
      else : @[alu.scala 31:42]
        node _T_4 = eq(io.operation, UInt<2>("h02")) @[alu.scala 31:27]
        when _T_4 : @[alu.scala 31:42]
          node _T_5 = add(io.inputx, io.inputy) @[alu.scala 32:28]
          node _T_6 = tail(_T_5, 1) @[alu.scala 32:28]
          io.result <= _T_6 @[alu.scala 32:15]
          skip @[alu.scala 31:42]
        else : @[alu.scala 34:42]
          node _T_7 = eq(io.operation, UInt<2>("h03")) @[alu.scala 34:27]
          when _T_7 : @[alu.scala 34:42]
            node _T_8 = sub(io.inputx, io.inputy) @[alu.scala 35:28]
            node _T_9 = tail(_T_8, 1) @[alu.scala 35:28]
            io.result <= _T_9 @[alu.scala 35:15]
            skip @[alu.scala 34:42]
          else : @[alu.scala 37:42]
            node _T_10 = eq(io.operation, UInt<3>("h04")) @[alu.scala 37:27]
            when _T_10 : @[alu.scala 37:42]
              node _T_11 = asSInt(io.inputx) @[alu.scala 38:29]
              node _T_12 = bits(io.inputy, 4, 0) @[alu.scala 38:48]
              node _T_13 = dshr(_T_11, _T_12) @[alu.scala 38:36]
              node _T_14 = asUInt(_T_13) @[alu.scala 38:55]
              io.result <= _T_14 @[alu.scala 38:15]
              skip @[alu.scala 37:42]
            else : @[alu.scala 40:42]
              node _T_15 = eq(io.operation, UInt<3>("h05")) @[alu.scala 40:27]
              when _T_15 : @[alu.scala 40:42]
                node _T_16 = lt(io.inputx, io.inputy) @[alu.scala 41:29]
                io.result <= _T_16 @[alu.scala 41:15]
                skip @[alu.scala 40:42]
              else : @[alu.scala 43:42]
                node _T_17 = eq(io.operation, UInt<3>("h06")) @[alu.scala 43:27]
                when _T_17 : @[alu.scala 43:42]
                  node _T_18 = xor(io.inputx, io.inputy) @[alu.scala 44:28]
                  io.result <= _T_18 @[alu.scala 44:15]
                  skip @[alu.scala 43:42]
                else : @[alu.scala 46:42]
                  node _T_19 = eq(io.operation, UInt<3>("h07")) @[alu.scala 46:27]
                  when _T_19 : @[alu.scala 46:42]
                    node _T_20 = bits(io.inputy, 4, 0) @[alu.scala 47:40]
                    node _T_21 = dshr(io.inputx, _T_20) @[alu.scala 47:28]
                    io.result <= _T_21 @[alu.scala 47:15]
                    skip @[alu.scala 46:42]
                  else : @[alu.scala 49:42]
                    node _T_22 = eq(io.operation, UInt<4>("h08")) @[alu.scala 49:27]
                    when _T_22 : @[alu.scala 49:42]
                      node _T_23 = asSInt(io.inputx) @[alu.scala 50:29]
                      node _T_24 = asSInt(io.inputy) @[alu.scala 50:48]
                      node _T_25 = lt(_T_23, _T_24) @[alu.scala 50:36]
                      io.result <= _T_25 @[alu.scala 50:15]
                      skip @[alu.scala 49:42]
                    else : @[alu.scala 52:42]
                      node _T_26 = eq(io.operation, UInt<4>("h09")) @[alu.scala 52:27]
                      when _T_26 : @[alu.scala 52:42]
                        node _T_27 = bits(io.inputy, 4, 0) @[alu.scala 53:40]
                        node _T_28 = dshl(io.inputx, _T_27) @[alu.scala 53:28]
                        io.result <= _T_28 @[alu.scala 53:15]
                        skip @[alu.scala 52:42]
                      else : @[alu.scala 55:42]
                        node _T_29 = eq(io.operation, UInt<4>("h0a")) @[alu.scala 55:27]
                        when _T_29 : @[alu.scala 55:42]
                          node _T_30 = or(io.inputx, io.inputy) @[alu.scala 56:30]
                          node _T_31 = not(_T_30) @[alu.scala 56:18]
                          io.result <= _T_31 @[alu.scala 56:15]
                          skip @[alu.scala 55:42]
                        else : @[alu.scala 58:42]
                          node _T_32 = eq(io.operation, UInt<4>("h0b")) @[alu.scala 58:27]
                          when _T_32 : @[alu.scala 58:42]
                            node _T_33 = asSInt(io.inputx) @[alu.scala 59:29]
                            node _T_34 = asSInt(io.inputy) @[alu.scala 59:49]
                            node _T_35 = geq(_T_33, _T_34) @[alu.scala 59:36]
                            io.result <= _T_35 @[alu.scala 59:15]
                            skip @[alu.scala 58:42]
                          else : @[alu.scala 61:42]
                            node _T_36 = eq(io.operation, UInt<4>("h0c")) @[alu.scala 61:27]
                            when _T_36 : @[alu.scala 61:42]
                              node _T_37 = geq(io.inputx, io.inputy) @[alu.scala 62:29]
                              io.result <= _T_37 @[alu.scala 62:15]
                              skip @[alu.scala 61:42]
                            else : @[alu.scala 64:42]
                              node _T_38 = eq(io.operation, UInt<4>("h0d")) @[alu.scala 64:27]
                              when _T_38 : @[alu.scala 64:42]
                                node _T_39 = eq(io.inputx, io.inputy) @[alu.scala 65:28]
                                io.result <= _T_39 @[alu.scala 65:15]
                                skip @[alu.scala 64:42]
                              else : @[alu.scala 67:42]
                                node _T_40 = eq(io.operation, UInt<4>("h0e")) @[alu.scala 67:27]
                                when _T_40 : @[alu.scala 67:42]
                                  node _T_41 = neq(io.inputx, io.inputy) @[alu.scala 68:28]
                                  io.result <= _T_41 @[alu.scala 68:15]
                                  skip @[alu.scala 67:42]
                                else : @[alu.scala 70:14]
                                  io.result <= UInt<1>("h00") @[alu.scala 71:15]
                                  skip @[alu.scala 70:14]
    
